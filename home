<!doctype html>
<html lang="en">
<head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width,initial-scale=1">
<title>Panorama Kitchens</title>
<style>
  html, body { margin:0; height:100%; background:#000; }
  #viewer { width:100%; height:100%; display:block; }
  .logo {
    position:fixed; top:12px; left:12px; z-index:10;
    background:rgba(0,0,0,0.4); padding:5px; border-radius:8px;
  }
  .logo img { height:40px; }
  .switch-btn {
    position:fixed; top:60px; left:12px; z-index:10;
    background:rgba(0,0,0,0.4); color:#fff; padding:8px 10px;
    border:none; border-radius:6px; cursor:pointer;
    font-family:Arial, sans-serif;
  }
  .error {
    color:#fff; font-family:Arial,Helvetica,sans-serif;
    padding:20px;
  }
</style>
</head>
<body>

<div class="logo">
  <img src="logo.png" alt="Logo">
</div>

<button class="switch-btn" onclick="switchKitchen()">انتقل للمطبخ الآخر</button>

<style>
  .logo {
    position: fixed;
    top: 12px;
    left: 12px;
    z-index: 10;
    background: rgba(0,0,0,0.4);
    padding: 10px;
    border-radius: 8px;
  }
  .logo img {
    height: 90px; /* تكبير اللوجو */
  }
  .switch-btn {
    position: fixed;
    top: 50%; /* في نص الصفحة رأسيًا */
    transform: translateY(-50%);
    left: 12px; /* من الشمال */
    z-index: 10;
    background: rgba(0,0,0,0.4);
    color: #fff;
    padding: 12px 16px;
    border: none;
    border-radius: 6px;
    cursor: pointer;
    font-family: Arial, sans-serif;
    font-size: 16px;
  }
</style>


<canvas id="viewer"></canvas>

<script src="three.min.js"></script>
<script src="OrbitControls.js"></script>
<script>
let scene, camera, renderer, controls;
let currentKitchen = 1;

const kitchens = {
  1: ['show_r.jpg','show_l.jpg','show_u.jpg','show_d.jpg','show_f.jpg','show_b.jpg'],
  2: ['k2_r.jpg','k2_l.jpg','k2_u.jpg','k2_d.jpg','k2_f.jpg','k2_b.jpg']
};

init();
loadKitchen(currentKitchen);

function init(){
  renderer = new THREE.WebGLRenderer({canvas:document.getElementById('viewer'), antialias:true});
  renderer.setSize(window.innerWidth, window.innerHeight);
  renderer.setPixelRatio(window.devicePixelRatio);
  renderer.outputEncoding = THREE.sRGBEncoding;

  scene = new THREE.Scene();
  camera = new THREE.PerspectiveCamera(75, window.innerWidth/window.innerHeight, 0.1, 1000);
  camera.position.set(0,0,0.1);

  controls = new THREE.OrbitControls(camera, renderer.domElement);
  controls.enableZoom = true;
  controls.enablePan = false;
  controls.rotateSpeed = -0.25;
  controls.enableDamping = true;
  controls.dampingFactor = 0.07;

  window.addEventListener('resize', () => {
    camera.aspect = window.innerWidth/window.innerHeight;
    camera.updateProjectionMatrix();
    renderer.setSize(window.innerWidth, window.innerHeight);
  });

  animate();
}

function loadKitchen(num){
  const loader = new THREE.CubeTextureLoader();
  loader.setPath('./');
  const cubeTex = loader.load(kitchens[num]);
  cubeTex.encoding = THREE.sRGBEncoding;
  scene.background = cubeTex;
}

function switchKitchen(){
  currentKitchen = (currentKitchen === 1) ? 2 : 1;
  loadKitchen(currentKitchen);
}

function animate(){
  requestAnimationFrame(animate);
  controls.update();
  renderer.render(scene, camera);
}
</script>

</body>
</html>
